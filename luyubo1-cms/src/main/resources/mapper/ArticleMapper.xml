<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luyubo.cms.dao.ArticleDao">
	 <select id="select" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId,channel.name channelName,cate.name categoryName
		from cms_article article,cms_channel channel,cms_category cate
		WHERE article.channel_id=channel.id AND article.category_id=cate.id and article.deleted=0 and article.status in (1,3)
		<if test="article.channelId!=null">
			and article.channel_id = #{article.channelId}
		</if>
		<if test="article.title!=null and article.title!=''">
			and article.title like '%${article.title}%'
		</if>
		<if test="article.userId!=null">
			and article.user_id=#{article.userId}
		</if>
		<if test="article.status!=null">
			and article.status=#{article.status}
		</if>
		<if test="article.statusIds!=null">
			and article.status in (${article.statusIds})
		</if>
		order by updated desc
	</select>
	
	<select id="selectById" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId
		 from cms_article article where id=#{id}
	</select>
	
	<select id="getNewList" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId
		from cms_article article
		WHERE article.deleted=0 and article.status in (1,3)
		order by article.created desc
		limit ${num}
	</select>
	
	<select id="selectByTousu" resultType="Article">
		select article.*,complain.id complainid,complain.complaintype,complain.urlip from cms_article article left join cms_complain complain on
		complain.article_id=article.id
		<where>
			<if test="complain.complaintype!=null and complain.complaintype!=''">
				complain.complaintype=#{complain.complaintype}
			</if>
			<if test="complain.min!=null">
				and article.tousuCnt&gt;=#{complain.min}
			</if>
			<if test="complain.max!=null">
				and article.tousuCnt&lt;=#{complain.max}
			</if>
		</where>
			<if test="complain.articledesc==0 or complain.articledesc==null">
				order by complain.created desc
			</if>
			<if test="complain.articledesc==1">
				order by complain.created
			</if>
	</select>
	
	<select id="selectByIds" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId
		 from cms_article article where id in(${ids})
	</select>
	
	<select id="selectByHot" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId,user.nickname
		from cms_article article,cms_user user
		WHERE article.user_id=user.id and article.deleted=0 and article.status in (1,3) AND article.hot>0
		order by article.hot desc
	</select>
	
	<select id="getListByChannelIdAndCateId" resultType="Article">
		select article.*,article.channel_id channelId,article.user_id userId,article.category_id categoryId,user.nickname
		from cms_article article,cms_user user
		WHERE article.user_id=user.id and article.deleted=0 and article.status in (1,3)
		AND article.channel_id=#{channelId}
		<if test="cateId>0">
			and category_id=#{cateId}
		</if>
		order by article.created desc
	</select>
	
	<select id="getListByChannelId" resultType="Article">
		select *
		 from cms_article article where deleted=0 and status=1 and channel_id=#{channelId} and id!=#{articleId}
		 limit ${num}
	</select>
	
	<select id="selecttouSu" resultType="Article">
		select *
		 from cms_article article left join cms_complain on cms_complain.article_id=article.id where deleted=0 and status=1
		 limit ${num}
	</select>
	
	<select id="selectByTousuUser"  resultType="Article">
		select cms_article.*,complain.complaintype,complain.urlip,complain.created tousuTime,user.nickname
		 from cms_article left join cms_complain complain on complain.article_id=cms_article.id
		left join cms_user user on user.id=complain.user_id
		<where>
			cms_article.id=#{id}
		</where>
		order by complain.created desc
	</select>
	<select id="count" resultType="int">
		select count(1) from cms_article
	</select>
	
	<insert id="insert" parameterType="com.luyubo.cms.pojo.Article">
		insert into cms_article (title, picture, channel_id, 
	      category_id, user_id, hits, 
	      hot, status, deleted, 
	      created, updated, commentCnt, 
	      content)
	    values (#{article.title}, #{article.picture}, #{article.channelId}, 
	      #{article.categoryId}, #{article.userId}, #{article.hits}, 
	      #{article.hot}, #{article.status}, #{article.deleted}, 
	      #{article.created}, #{article.updated}, #{article.commentCnt}, 
	      #{article.content})
	</insert>
	
	<update id="update">
		update cms_article
	    set title = #{article.title},
	      picture = #{article.picture},
	      channel_id = #{article.channelId},
	      category_id = #{article.categoryId},
	      user_id = #{article.userId},
	      status = #{article.status},
	      updated = #{article.updated},
	      commentCnt = #{article.commentCnt},
	      content = #{article.content}
	    where id = #{article.id}
	</update>
	
	<update id="updateDeleteByIds">
		update cms_article 
		set 
		deleted=1
		where id in (${ids})
	</update>
	
	<update id="updateCommentCnt">
		update cms_article
		set commentCnt=commentCnt+1
		where id=#{articleId}
	</update>
	
	<update id="updateTousuCnt">
		update cms_article 
		set tousuCnt=tousuCnt+1
		where id=#{article.id}
	</update>
	
	<update id="updateHit">
		update cms_article
		set hits=hits+1
		where id=#{id}
	</update>
	
	<update id="updateStatus3">
		update cms_article
		set status=3
		where id=#{id}
	</update>
	
	<delete id="deleteById">
		delete from cms_article where id=#{id}
	</delete>
	
	<delete id="deleteByIds">
		delete from cms_article where id in(${ids})
	</delete>
	
	<update id="updateStatus">
		update cms_article set status=#{status} where id=#{id}
	</update>
	
	<update id="addHot">
		update cms_article set hot=hot+1 where id=#{id}
	</update>
</mapper>